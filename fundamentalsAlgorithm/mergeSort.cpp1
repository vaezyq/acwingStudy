//
// Created by 22126 on 2021/10/11.
//



#include <iostream>

using namespace std;
const int N = 1e6;
int arrayNum[N];


void OtherMergeSort(int *array, int startIndex, int endIndex);

int main() {
    int m;
    cin >> m;
    for (int i = 0; i < m; ++i) {
        cin >> arrayNum[i];
    }

    OtherMergeSort(arrayNum, 0, m - 1);
    for (int j = 0; j < m; ++j) {
        cout << arrayNum[j] << " ";
    }
}


void OtherMergeSort(int *array, int startIndex, int endIndex) {
    if (startIndex >= endIndex) {
        return;
    }
    int divide = (startIndex + endIndex) >> 1;
    OtherMergeSort(array, startIndex, divide);
    OtherMergeSort(array, divide + 1, endIndex);
    int *mergeArray = new int[endIndex - startIndex + 1];
    int k = 0;
    int i = startIndex, j = divide + 1;
    while (i <= divide && j <= endIndex) {
        if (array[i] < array[j]) {
            mergeArray[k++] = array[i++];
        } else {
            mergeArray[k++] = array[j++];
        }
    }
    while (i <= divide) {
        mergeArray[k++] = array[i++];
    }
    while (j <= endIndex) {
        mergeArray[k++] = array[j++];
    }
    copy(mergeArray, mergeArray + endIndex - startIndex + 1, array + startIndex);
}